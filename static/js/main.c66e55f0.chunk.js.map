{"version":3,"sources":["components/JoinRoom/JoinRoom.js","components/Messages/Message/Message.js","components/RoomInfo/RoomInfo.js","components/Input/Input.js","components/Robots/Robot/Robot.js","components/Chat/Chats.js","components/Chat/Chat.js","App.js","index.js"],"names":["JoinRoom","useState","name","setName","room","setRoom","className","Paper","elevation","Avatar","Typography","component","variant","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","e","target","value","type","onClick","preventDefault","to","Button","color","Message","message","text","user","isSentByCurrentUser","trimmedName","trim","toLowerCase","RoomInfo","href","Input","setMessage","sendMessage","placeholder","onKeyPress","key","Robot","robot","Chats","messages","robots","chatComponents","totalLength","Math","max","length","i","push","Chat","location","setMessages","setRobot","setRobots","AppBar","Toolbar","noWrap","newRobot","prevMessages","prevRobots","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"scAuEeA,G,MA5DE,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACdC,EADc,KACRC,EADQ,OAEGF,mBAAS,IAFZ,mBAEdG,EAFc,KAERC,EAFQ,KAIrB,OACE,yBAAKC,UAAU,sBACb,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAGF,UAAU,sBAC7B,kBAACG,EAAA,EAAD,CAAQH,UAAU,UAChB,kBAAC,IAAD,OAEF,kBAACI,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAAnC,YAGA,0BAAMN,UAAU,WAAWO,YAAU,GACnC,kBAACC,EAAA,EAAD,CACEF,QAAQ,WACRG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNjB,KAAK,OACLkB,aAAa,OACbC,WAAS,EACTC,SAAU,SAACC,GAAD,OAAOpB,EAAQoB,EAAEC,OAAOC,UAEpC,kBAACX,EAAA,EAAD,CACEF,QAAQ,WACRG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTf,KAAK,OACLiB,MAAM,OACNO,KAAK,OACLR,GAAG,OACHI,SAAU,SAACC,GAAD,OAAOlB,EAAQkB,EAAEC,OAAOC,UAEpC,yBAAKnB,UAAU,mBACb,kBAAC,IAAD,CACEA,UAAU,iBACVqB,QAAS,SAACJ,GAAD,OAASrB,GAASE,EAA4B,KAArBmB,EAAEK,kBACpCC,GAAE,8BAAyB3B,EAAzB,iBAAsCE,IAExC,kBAAC0B,EAAA,EAAD,CACEJ,KAAK,SACLT,WAAS,EACTL,QAAQ,YACRmB,MAAM,UACNzB,UAAU,cALZ,kB,QC5BC0B,G,YAvBC,SAAC,GAAuC,IAAD,IAApCC,QAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAC9BC,GAAsB,EACpBC,EAF+C,EAAXnC,KAEjBoC,OAAOC,cAIhC,OAHIJ,IAASE,IACXD,GAAsB,GAEjBA,EACL,yBAAK9B,UAAU,wBACb,yBAAKA,UAAU,8BACb,uBAAGA,UAAU,qBAAqB4B,IAEpC,uBAAG5B,UAAU,qBAAqB+B,IAGpC,yBAAK/B,UAAU,0BACb,uBAAGA,UAAU,qBAAqB6B,GAClC,yBAAK7B,UAAU,8BACb,uBAAGA,UAAU,qBAAqB4B,O,YCO3BM,MArBf,YAA6B,IAATpC,EAAQ,EAARA,KAClB,OACE,yBAAKE,UAAU,YACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,iBAAd,iBAAyCF,KAE3C,yBAAKE,UAAU,aACb,kBAACwB,EAAA,EAAD,CACExB,UAAU,aAEVM,QAAQ,SACR6B,KAAK,YACLV,MAAM,WALR,YCeOW,G,MAvBD,SAAC,GAAD,IAAGT,EAAH,EAAGA,QAASU,EAAZ,EAAYA,WAAYC,EAAxB,EAAwBA,YAAxB,OAGZ,yBAAKtC,UAAU,kBACb,2BACEA,UAAU,QACVoB,KAAK,OACLmB,YAAY,0DACZpB,MAAOQ,EACPX,SAAU,SAACC,GAAD,OAAOoB,EAAWpB,EAAEC,OAAOC,QACrCqB,WAAY,SAACvB,GAAD,MAAkB,UAAVA,EAAEwB,IAAkBH,EAAYrB,GAAK,QAE3D,kBAACO,EAAA,EAAD,CACElB,QAAQ,YACRmB,MAAM,UACNzB,UAAU,cACVqB,QAAS,SAACJ,GAAD,OAAOqB,EAAYrB,KAJ9B,WCSWyB,G,MAvBD,SAAC,GAAqC,IAAD,IAAlCC,MAASf,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAC1BC,GAAsB,EACpBC,EAF2C,EAAXnC,KAEboC,OAAOC,cAIhC,OAHIJ,IAASE,IACXD,GAAsB,GAEjBA,EACL,yBAAK9B,UAAU,wBACb,yBAAKA,UAAU,4BACb,uBAAGA,UAAU,mBAAmB4B,IAElC,uBAAG5B,UAAU,mBAAmB+B,IAGlC,yBAAK/B,UAAU,sBACb,uBAAGA,UAAU,mBAAmB6B,GAChC,yBAAK7B,UAAU,4BACb,uBAAGA,UAAU,mBAAmB4B,O,0BCiBzBgB,G,MAhCD,SAAC,GAKb,IAL6C,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,OAAQlD,EAAW,EAAXA,KAC3BmD,EAAiB,GAEjBC,EAAcC,KAAKC,IAAIL,EAASM,OAAQL,EAAOK,QAE5CC,EAAI,EAAGA,EAAIJ,EAAaI,IAC3BA,EAAIP,EAASM,QACfJ,EAAeM,KACb,kBAAC,EAAD,CACEZ,IAAKW,EACLzB,QAASkB,EAASO,GAClBxD,KAAMA,EACNkC,oBAAqBe,EAASO,GAAGvB,OAASjC,KAK5CwD,EAAIN,EAAOK,QACbJ,EAAeM,KACb,kBAAC,EAAD,CACEZ,IAAKW,EACLT,MAAOG,EAAOM,GACdxD,KAAMA,EACNkC,oBAAqBgB,EAAOM,GAAGvB,OAASjC,KAMhD,OAAO,yBAAKI,UAAU,SAAS+C,KCoDlBO,EApEF,SAAC,GAAiB,EAAfC,SAAgB,IAAD,EACL5D,mBAAS,IADJ,mBACtBC,EADsB,aAELD,mBAAS,KAFJ,mBAEtBG,EAFsB,aAGCH,mBAAS,KAHV,mBAGtBgC,EAHsB,KAGbU,EAHa,OAIG1C,mBAAS,IAJZ,mBAItBkD,EAJsB,KAIZW,EAJY,OAKH7D,mBAAS,IALN,mBAKf8D,GALe,aAMD9D,mBAAS,IANR,mBAMtBmD,EANsB,KAMdY,EANc,OAQH/D,mBAAS,IARN,6BAqC7B,OACE,yBAAKK,UAAU,sBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,UACb,kBAAC2D,EAAA,EAAD,CAAQlC,MAAM,WACZ,kBAACmC,EAAA,EAAD,CAAS5D,UAAU,WACjB,kBAACI,EAAA,EAAD,CAAYE,QAAQ,KAAKmB,MAAM,UAAUoC,QAAM,GAA/C,YAGA,kBAACrC,EAAA,EAAD,CAAQC,MAAM,UAAUU,KAAK,aAA7B,YAMN,yBAAKnC,UAAU,cACb,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAGF,UAAU,mBAC7B,kBAAC,EAAD,CAAUF,KAAMA,IAChB,kBAAC,EAAD,CAAO+C,SAAUA,EAAUC,OAAQA,EAAQlD,KAAMA,IACjD,kBAAC,EAAD,CACE+B,QAASA,EACTU,WAAYA,EACZC,YAvCc,SAACrB,GAEzB,GADAA,EAAEK,iBACEK,EAAQK,OAAQ,CAClB,IAAM8B,EAAWnC,EACjB6B,GAAY,SAACO,GAAD,4BACPA,GADO,CAEV,CAAElC,KAAMjC,EAAMgC,KAAMD,QAEtBU,EAAW,IAEXoB,EAASK,GACTJ,GAAU,SAACM,GAAD,4BACLA,GADK,CAER,CAAEnC,KAAMjC,EAAMgC,KAAMkC,iBCrCbG,EAPH,kBACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aAAaC,OAAK,EAAC9D,UAAWX,IAC1C,kBAAC,IAAD,CAAOwE,KAAK,iBAAiB7D,UAAWiD,MCN5Cc,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.c66e55f0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport \"./JoinRoom.css\";\n\nconst JoinRoom = () => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  return (\n    <div className=\"joinOuterContainer\">\n      <Paper elevation={3} className=\"joinInnerContainer\">\n        <Avatar className=\"avatar\">\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          LamaChat\n        </Typography>\n        <form className=\"joinForm\" noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            autoFocus\n            onChange={(e) => setName(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"room\"\n            label=\"Room\"\n            type=\"room\"\n            id=\"room\"\n            onChange={(e) => setRoom(e.target.value)}\n          />\n          <div className=\"buttonBox mt-10\">\n            <Link\n              className=\"joinButtonLink\"\n              onClick={(e) => (!name || !room ? e.preventDefault() : null)}\n              to={`/lamaChat/chat?name=${name}&room=${room}`}\n            >\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"joinButton\"\n              >\n                Sign In\n              </Button>\n            </Link>\n          </div>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n\nexport default JoinRoom;\n\n","import React from \"react\";\nimport \"./Message.css\";\n\nconst Message = ({ message: { text, user }, name }) => {\n  let isSentByCurrentUser = false;\n  const trimmedName = name.trim().toLowerCase();\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n  return isSentByCurrentUser ? (\n    <div className=\"messageContainer end\">\n      <div className=\"messageBox backgroundLight\">\n        <p className=\"messageText black\">{text}</p>\n      </div>\n      <p className=\"sentMessage pl-10\">{trimmedName}</p>\n    </div>\n  ) : (\n    <div className=\"messageContainer start\">\n      <p className=\"sentMessage pr-10\">{user}</p>\n      <div className=\"messageBox backgroundLight\">\n        <p className=\"messageText black\">{text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./RoomInfo.css\";\n\nimport Button from \"@material-ui/core/Button\";\n\nfunction RoomInfo({ room }) {\n  return (\n    <div className=\"roomInfo\">\n      <div className=\"leftInfo\">\n        <h3 className=\"leftInfo-text\">{`Room : ${room}`}</h3>\n      </div>\n      <div className=\"rightInfo\">\n        <Button\n          className=\"infoButton\"\n          // variant=\"contained\"\n          variant=\"raised\"\n          href=\"/lamaChat\"\n          color=\"inherit\"\n        >\n          close\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default RoomInfo;\n","import React from \"react\";\nimport \"./Input.css\";\n\nimport Button from \"@material-ui/core/Button\";\n\nconst Input = ({ message, setMessage, sendMessage }) => (\n  //   return <div className=\"Input\"></div>;\n  // <form className=\"inputForm\">\n  <div className=\"inputContainer\">\n    <input\n      className=\"input\"\n      type=\"text\"\n      placeholder=\"메세지를 입력하세요\"\n      value={message}\n      onChange={(e) => setMessage(e.target.value)}\n      onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\n    />\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      className=\"inputButton\"\n      onClick={(e) => sendMessage(e)}\n    >\n      send\n    </Button>\n  </div>\n  // </form>\n);\nexport default Input;\n","import React from \"react\";\nimport \"./Robot.css\";\n\nconst Robot = ({ robot: { text, user }, name }) => {\n  let isSentByCurrentUser = false;\n  const trimmedName = name.trim().toLowerCase();\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n  return isSentByCurrentUser ? (\n    <div className=\"robotContainer start\">\n      <div className=\"robotBox backgroundLight\">\n        <p className=\"robotText black\">{text}</p>\n      </div>\n      <p className=\"sentrobot pl-10\">{trimmedName}</p>\n    </div>\n  ) : (\n    <div className=\"robotContainer end\">\n      <p className=\"sentRobot pr-10\">{user}</p>\n      <div className=\"robotBox backgroundLight\">\n        <p className=\"robotText black\">{text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Robot;\n","import React from \"react\";\r\nimport Message from \"../Messages/Message/Message\";\r\nimport Robot from \"../Robots/Robot/Robot\";\r\nimport \"./Chats.css\"\r\n\r\nconst Chats = ({ messages, robots, name }) => {\r\n  const chatComponents = [];\r\n\r\n  const totalLength = Math.max(messages.length, robots.length);\r\n\r\n  for (let i = 0; i < totalLength; i++) {\r\n    if (i < messages.length) {\r\n      chatComponents.push(\r\n        <Message\r\n          key={i}\r\n          message={messages[i]}\r\n          name={name}\r\n          isSentByCurrentUser={messages[i].user === name}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (i < robots.length) {\r\n      chatComponents.push(\r\n        <Robot\r\n          key={i}\r\n          robot={robots[i]}\r\n          name={name}\r\n          isSentByCurrentUser={robots[i].user === name}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return <div className=\"chats\">{chatComponents}</div>;\r\n};\r\n\r\nexport default Chats;\r\n","import React, { useState } from \"react\";\nimport \"./Chat.css\";\n\n// 하위 컴포넌트\nimport Messages from \"../Messages/Messages\";\nimport RoomInfo from \"../RoomInfo/RoomInfo\";\nimport Input from \"../Input/Input\";\nimport Robots from \"../Robots/Robots\"\n\n// Material-ui\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Chats from \"./Chats\";\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [robot, setRobot] = useState(\"\");\n  const [robots, setRobots] = useState([]);\n\n  const [users, setUsers] = useState([]);\n\n  const handleJoin = () => {\n    if (name.trim() && room.trim()) {\n      setUsers((prevUsers) => [...prevUsers, name]);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { user: \"admin\", text: `${name}, welcome to the chat room!` },\n      ]);\n    }\n  };\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (message.trim()) {\n      const newRobot = message; // 메시지를 robot에 저장\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { user: name, text: message },\n      ]);\n      setMessage(\"\");\n\n      setRobot(newRobot); // robot state에 저장\n      setRobots((prevRobots) => [\n        ...prevRobots, \n        { user: name, text: newRobot }]); // robots state에 저장\n    }\n  };\n\n  return (\n    <div className=\"chatOuterContainer\">\n      <div className=\"chatInnerContainer\">\n        <div className=\"appbar\">\n          <AppBar color=\"primary\">\n            <Toolbar className=\"toolBar\">\n              <Typography variant=\"h4\" color=\"inherit\" noWrap>\n                LamaChat\n              </Typography>\n              <Button color=\"inherit\" href=\"/lamaChat\">\n                close\n              </Button>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <div className=\"chatScreen\">\n          <Paper elevation={5} className=\"chatScreenPaper\">\n            <RoomInfo room={room} />\n            <Chats messages={messages} robots={robots} name={name} />\n            <Input\n              message={message}\n              setMessage={setMessage}\n              sendMessage={handleSendMessage}\n            />\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport JoinRoom from \"./components/JoinRoom/JoinRoom\";\nimport Chat from \"./components/Chat/Chat\";\n\n// 1. Router 경로 설정\nconst App = () => (\n  <Router>\n    <Route path=\"/lamaChat/\" exact component={JoinRoom} />\n    <Route path=\"/lamaChat/chat\" component={Chat} />\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}